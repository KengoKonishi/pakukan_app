create table "public"."cleaning_schedules" (
    "id" bigint generated by default as identity not null,
    "cleaner_id" bigint not null,
    "guest_house_id" bigint not null,
    "start_datetime" timestamp without time zone not null,
    "end_datetime" timestamp without time zone not null,
    "cleaning_status_id" bigint not null,
    "created_at" timestamp without time zone default now(),
    "updated_at" timestamp without time zone default now()
);


create table "public"."cleaning_status" (
    "id" bigint generated by default as identity not null,
    "name" character varying not null
);


alter table "public"."cleaning_status" enable row level security;

create table "public"."guest_houses" (
    "id" bigint generated by default as identity not null,
    "owner_group_id" bigint not null,
    "name" character varying not null,
    "created_at" timestamp without time zone default now(),
    "updated_at" timestamp without time zone default now(),
    "is_deleted" smallint default '0'::smallint
);


alter table "public"."guest_houses" enable row level security;

create table "public"."stay_schedules" (
    "id" bigint generated by default as identity not null,
    "guest_house_id" bigint,
    "start_datetime" timestamp without time zone not null,
    "end_datetime" timestamp without time zone not null,
    "guest_name" character varying not null,
    "numbers_of_guests" character varying not null,
    "amenities_info" character varying,
    "bag_recieve_info" character varying,
    "others" character varying,
    "created_at" timestamp without time zone default now(),
    "updated_at" timestamp without time zone default now()
);


alter table "public"."admins" disable row level security;

alter table "public"."cleaners" alter column "email" set not null;

alter table "public"."cleaners" alter column "name" set not null;

alter table "public"."cleaners" disable row level security;

CREATE UNIQUE INDEX cleaning_schedules_pkey ON public.cleaning_schedules USING btree (id);

CREATE UNIQUE INDEX cleaning_status_pkey ON public.cleaning_status USING btree (id);

CREATE UNIQUE INDEX guest_houses_pkey ON public.guest_houses USING btree (id);

CREATE UNIQUE INDEX stay_schedules_pkey ON public.stay_schedules USING btree (id);

alter table "public"."cleaning_schedules" add constraint "cleaning_schedules_pkey" PRIMARY KEY using index "cleaning_schedules_pkey";

alter table "public"."cleaning_status" add constraint "cleaning_status_pkey" PRIMARY KEY using index "cleaning_status_pkey";

alter table "public"."guest_houses" add constraint "guest_houses_pkey" PRIMARY KEY using index "guest_houses_pkey";

alter table "public"."stay_schedules" add constraint "stay_schedules_pkey" PRIMARY KEY using index "stay_schedules_pkey";

alter table "public"."cleaning_schedules" add constraint "public_cleaning_schedules_cleaner_id_fkey" FOREIGN KEY (cleaner_id) REFERENCES cleaners(id) not valid;

alter table "public"."cleaning_schedules" validate constraint "public_cleaning_schedules_cleaner_id_fkey";

alter table "public"."cleaning_schedules" add constraint "public_cleaning_schedules_cleaning_status_id_fkey" FOREIGN KEY (cleaning_status_id) REFERENCES cleaning_status(id) not valid;

alter table "public"."cleaning_schedules" validate constraint "public_cleaning_schedules_cleaning_status_id_fkey";

alter table "public"."cleaning_schedules" add constraint "public_cleaning_schedules_guest_house_id_fkey" FOREIGN KEY (guest_house_id) REFERENCES guest_houses(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."cleaning_schedules" validate constraint "public_cleaning_schedules_guest_house_id_fkey";

alter table "public"."guest_houses" add constraint "public_guest_houses_owner_group_id_fkey" FOREIGN KEY (owner_group_id) REFERENCES owner_groups(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."guest_houses" validate constraint "public_guest_houses_owner_group_id_fkey";

alter table "public"."stay_schedules" add constraint "public_stay_schedules_guest_house_id_fkey" FOREIGN KEY (guest_house_id) REFERENCES guest_houses(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."stay_schedules" validate constraint "public_stay_schedules_guest_house_id_fkey";

grant delete on table "public"."cleaning_schedules" to "anon";

grant insert on table "public"."cleaning_schedules" to "anon";

grant references on table "public"."cleaning_schedules" to "anon";

grant select on table "public"."cleaning_schedules" to "anon";

grant trigger on table "public"."cleaning_schedules" to "anon";

grant truncate on table "public"."cleaning_schedules" to "anon";

grant update on table "public"."cleaning_schedules" to "anon";

grant delete on table "public"."cleaning_schedules" to "authenticated";

grant insert on table "public"."cleaning_schedules" to "authenticated";

grant references on table "public"."cleaning_schedules" to "authenticated";

grant select on table "public"."cleaning_schedules" to "authenticated";

grant trigger on table "public"."cleaning_schedules" to "authenticated";

grant truncate on table "public"."cleaning_schedules" to "authenticated";

grant update on table "public"."cleaning_schedules" to "authenticated";

grant delete on table "public"."cleaning_schedules" to "service_role";

grant insert on table "public"."cleaning_schedules" to "service_role";

grant references on table "public"."cleaning_schedules" to "service_role";

grant select on table "public"."cleaning_schedules" to "service_role";

grant trigger on table "public"."cleaning_schedules" to "service_role";

grant truncate on table "public"."cleaning_schedules" to "service_role";

grant update on table "public"."cleaning_schedules" to "service_role";

grant delete on table "public"."cleaning_status" to "anon";

grant insert on table "public"."cleaning_status" to "anon";

grant references on table "public"."cleaning_status" to "anon";

grant select on table "public"."cleaning_status" to "anon";

grant trigger on table "public"."cleaning_status" to "anon";

grant truncate on table "public"."cleaning_status" to "anon";

grant update on table "public"."cleaning_status" to "anon";

grant delete on table "public"."cleaning_status" to "authenticated";

grant insert on table "public"."cleaning_status" to "authenticated";

grant references on table "public"."cleaning_status" to "authenticated";

grant select on table "public"."cleaning_status" to "authenticated";

grant trigger on table "public"."cleaning_status" to "authenticated";

grant truncate on table "public"."cleaning_status" to "authenticated";

grant update on table "public"."cleaning_status" to "authenticated";

grant delete on table "public"."cleaning_status" to "service_role";

grant insert on table "public"."cleaning_status" to "service_role";

grant references on table "public"."cleaning_status" to "service_role";

grant select on table "public"."cleaning_status" to "service_role";

grant trigger on table "public"."cleaning_status" to "service_role";

grant truncate on table "public"."cleaning_status" to "service_role";

grant update on table "public"."cleaning_status" to "service_role";

grant delete on table "public"."guest_houses" to "anon";

grant insert on table "public"."guest_houses" to "anon";

grant references on table "public"."guest_houses" to "anon";

grant select on table "public"."guest_houses" to "anon";

grant trigger on table "public"."guest_houses" to "anon";

grant truncate on table "public"."guest_houses" to "anon";

grant update on table "public"."guest_houses" to "anon";

grant delete on table "public"."guest_houses" to "authenticated";

grant insert on table "public"."guest_houses" to "authenticated";

grant references on table "public"."guest_houses" to "authenticated";

grant select on table "public"."guest_houses" to "authenticated";

grant trigger on table "public"."guest_houses" to "authenticated";

grant truncate on table "public"."guest_houses" to "authenticated";

grant update on table "public"."guest_houses" to "authenticated";

grant delete on table "public"."guest_houses" to "service_role";

grant insert on table "public"."guest_houses" to "service_role";

grant references on table "public"."guest_houses" to "service_role";

grant select on table "public"."guest_houses" to "service_role";

grant trigger on table "public"."guest_houses" to "service_role";

grant truncate on table "public"."guest_houses" to "service_role";

grant update on table "public"."guest_houses" to "service_role";

grant delete on table "public"."stay_schedules" to "anon";

grant insert on table "public"."stay_schedules" to "anon";

grant references on table "public"."stay_schedules" to "anon";

grant select on table "public"."stay_schedules" to "anon";

grant trigger on table "public"."stay_schedules" to "anon";

grant truncate on table "public"."stay_schedules" to "anon";

grant update on table "public"."stay_schedules" to "anon";

grant delete on table "public"."stay_schedules" to "authenticated";

grant insert on table "public"."stay_schedules" to "authenticated";

grant references on table "public"."stay_schedules" to "authenticated";

grant select on table "public"."stay_schedules" to "authenticated";

grant trigger on table "public"."stay_schedules" to "authenticated";

grant truncate on table "public"."stay_schedules" to "authenticated";

grant update on table "public"."stay_schedules" to "authenticated";

grant delete on table "public"."stay_schedules" to "service_role";

grant insert on table "public"."stay_schedules" to "service_role";

grant references on table "public"."stay_schedules" to "service_role";

grant select on table "public"."stay_schedules" to "service_role";

grant trigger on table "public"."stay_schedules" to "service_role";

grant truncate on table "public"."stay_schedules" to "service_role";

grant update on table "public"."stay_schedules" to "service_role";

create policy "Enable read access for owner"
on "public"."guest_houses"
as permissive
for select
to authenticated
using ((((auth.jwt() -> 'user_metadata'::text) ->> 'owner_group_id'::text) = (owner_group_id)::text));



